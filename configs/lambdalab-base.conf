vars: {
  monitoring: {
    zipkinAddress: ""
    zipkinSampleRate: 0.05
    datadogApiKey: ""
    intercomKey: ""
    googleAnalyticKey: ""
    mixpanelKey: ""
    inspectletKey: ""
    useNewrelic: false
    logstashServer: ""
    sentryKey: ""
  }

  elasticsearch: {
    host: localhost
    port: 9300
    clusterName: elasticsearch-dev
    publicIndexName: lambdalab-dev
  }

  mongodb: {
    uri: "mongodb://localhost"
    mainDbName: LambdalabDev
  }

  metadataservice: {
    host: localhost
    port: 10060
  }

  jenkins: {
    host: localhost
    port: 8080
    workerMongodb: ${vars.mongodb}
    metadataserviceAddress: ${vars.metadataservice.host}":"${vars.metadataservice.port}
    username: lambdalab-jenkins
    password: 52f3efac4873295298e5331823ffc792
    buildTimeoutSecond: -1
    buildCallbackUrl: ""
    dockerImage: ""
    enablePostProcess: false
  }
  gerrit {
    host: localhost
    port: 8080
    sshPort: 29418
    user: admin
    pass: secret
  }

  redis: {
    uri: "redis://localhost:6379"
  }
}

elasticsearch: ${vars.elasticsearch} {# TODO remove this
}

elasticsearchLauncher: {
  clusterName: ${vars.elasticsearch.clusterName}
  properties: {
    "path.data": ${LAMBDA_HOME}/data/elasticsearch
    "path.logs": ${LAMBDA_HOME}/logs/elasticsearch
  }
  env: {
    ES_JAVA_OPTS="-Xms2g -Xmx2g"
  }
}

pygments: {
  host: localhost
  port: 10040
  monitoring: ${vars.monitoring}
  mongodb: ${vars.mongodb}
  workers: 2
  dataserviceAddress: ${dataservice.host}":"${dataservice.port}
  dataserviceClientMaxConcurrency: 2
}

metadataservice: {
  host: ${vars.metadataservice.host}
  port: ${vars.metadataservice.port}
  mongodb: ${vars.mongodb}
  monitoring: ${vars.monitoring}
}

projectservice: {
  host: localhost
  port: 10010
  redisAddress: ${vars.redis.uri}
  mongodb: ${vars.mongodb}
  monitoring: ${vars.monitoring}
  jenkins: ${vars.jenkins}
  dataserviceAddress: ${dataservice.host}":"${dataservice.port}
  liaceserviceAddress: ${liaceservice.host}":"${liaceservice.port}
  liaceserviceAddressForIndexAll: ${liaceservice.host}":"${liaceservice.port}
  pygmentsAddress: ${pygments.host}":"${pygments.port}
  enableLiaceservice: true
  enableMultiBranchesBuild: false
  enableDeleteNonMasterBranchBuildJob: false
  enableManualUpdate: false,
  buildStatusScheduleRateSecond: 30
  buildScheduleRateSecond: 604800
  buildCheckRateSecond: 60
  updateScheduleRateSecond: 43200
  updateCheckRateSecond: 60
  garbageCollectScheduleRateSecond: 604800
  ongoingBuildProjectTimeoutSecond: 86400
  ongoingBuildProjectJenkinsCreationGracePeriodSecond: 60
  updatedNodeCountRatio: 0.8
}

dataservice: {
  host: localhost
  port: 10020
  monitoring: ${vars.monitoring}
  mongodb: ${vars.mongodb}
  repoRoot: ${LAMBDA_HOME}"/data/projects"

  // File path of kerberos config file.    
  krbConfPath="/etc/krb5.conf"    
        
  // jaas file path. Example jaas.conf:
  //    
  // com.sun.security.jgss.krb5.initiate {    
  //   com.sun.security.auth.module.Krb5LoginModule required    
  //   debug="true"   
  //   doNotPrompt="true"   
  //   useTicketCache="true"    
  //   ticketCache="krb-ticket-cache-location";   
  // };   
  jaasFilePath=""
}

liaceservice: {
  host: localhost
  port: 10030
  monitoring: ${vars.monitoring}
  esConfig: ${vars.elasticsearch}
  mongodb: ${vars.mongodb}
  dataserviceAddress: ${dataservice.host}":"${dataservice.port}
  dataserviceClientMaxConcurrency: 2
}

panalyzerservice: {
  host: localhost
  port: 10050
  monitoring: ${vars.monitoring}
  mongodb: ${vars.mongodb}
  liaceserviceAddress: ${liaceservice.host}":"${liaceservice.port}
}

codatlas: {
  host: localhost
  port: 9000
  sslCerts: ${LAMBDA_HOME}/certs
  mongodb: ${vars.mongodb}
  redisAddress: ${vars.redis.uri}
  projectserviceAddress: ${projectservice.host}":"${projectservice.port}
  dataserviceAddress: ${dataservice.host}":"${dataservice.port}
  liaceserviceAddress: ${liaceservice.host}":"${liaceservice.port}
  pygmentsAddress: ${pygments.host}":"${pygments.port}
  analyzerserviceAddress: ${panalyzerservice.host}":"${panalyzerservice.port}
  jenkinsAddress: ${vars.jenkins.host}":"${vars.jenkins.port}
  gerritAuth: ${vars.gerrit.user}":"${vars.gerrit.pass}
  isEnterprise: false
  enableManualAccessControl: false
  monitoring: ${vars.monitoring}
  addthisKey: ""
  extraHeader: ""
  extraBody: ""
  deployKeyName: "InsightIO"
  createIssueForRepoRequest: false
  frontendConfig: {
    enableUserImport: true
    enableRequestRepo: true,
    enableAboutPage: true,
    enableVisualization: false,
    enableCodeReview: false,
    enablePluginPromotion: true
  }
  clusterSyncConfig: {
    syncKey: ""
    remoteClusterUri: ""
  }
  mailchimpConfig: {
    apiKey: ""
    signupListId: ""
    inquiryListId: ""
  }
  esBasedFindReference: true
  _jvmArgs: []
}

editorserver: {
  host: localhost
  port: 9030
  mongodb: ${vars.mongodb}
  esConfig: ${vars.elasticsearch}
  jenkins: ${vars.jenkins} {
    buildCallbackUrl: ${editorserver.host}":"${editorserver.port}"/searchIndex"
    enablePostProcess: false
  }
  monitoring: ${vars.monitoring}
  rootPath: ${LAMBDA_HOME}/data/editor_projects/
  buildStatusScheduleRateSecond: 30
  ongoingBuildProjectTimeoutSecond: 86400
}

include "securesocial.conf"

