# Config file used to configure most common used user features

#####################################
# Configures manual update project
#####################################
# projectservice.enableManualUpdate: true

#####################################
# Configures manual manage user permission
#####################################
# codatlas.enableManualAccessControl: true

#####################################
# Configures user login system
#####################################
securesocial {
  #   gitlab {
  #     baseUrl="YOUR-GITLAB-URL"
  #     authorizationUrl=${securesocial.gitlab.baseUrl}/oauth/authorize
  #     accessTokenUrl=${securesocial.gitlab.baseUrl}/oauth/token
  #     // The OAUTH Client ID
  #     clientId=YOUR-GITLAB-CLIENT-ID
  #     // The OAUTH Client secret
  #     clientSecret=YOUR-GITLAB-CLIENT-SECRET
  #   }
  #   github {
  #     baseUrl="https://github.com"
  #     authorizationUrl=${securesocial.github.baseUrl}/login/oauth/authorize
  #     accessTokenUrl=${securesocial.github.baseUrl}/login/oauth/access_token
  #     clientId=YOUR-GITHUB-CLIENT-ID
  #     clientSecret=YOUR-GITHUB-CLIENT-SECRET
  #     scope="user:email,public_repo"
  #   }
  #   ldap {
  #     //  Configurations of other components that integrates with LDAP.
  #     integration {
  #       // Gitlab integration.
  #       gitlab {
  #         // Gitlab host url.
  #         gitlabUrl = "YOUR-GITLAB-URL"
  #         // Gitlab administrator account's private token.
  #         rootPrivateToken = ""
  #       }
  #     }
  #     //  the full url of the ldap server, including protocal, hostname and port
  #     //  e.g. "ldaps://localhost:636" , "ldap://localhost:389"
  #     providerUrl="ldap://localhost:389"
  #     //  search base from which the employee will be searched from
  #     searchBase="dc=example,dc=com"
  #     //  whether to use ssl when search ldap directory
  #     //  usually if it is turned on, providerUrl should starts with ldaps protocal with 636 port
  #     //  Also note that if your server is using a self-signed CA, add the CA into the keystore of your jvm otherwise
  #     //  there will be an SSL handshake error
  #     // useSsl=true
  #   }
}

#####################################
# Configures distribued cluster
#####################################

# frontend cluster host name, for single machine deployment set this to codatlas
vars.cluster.frontend = "frontend-machine"

# db cluster host name, for single machine deployment set this to db
vars.cluster.db = "db-machine"

# Following lines should be kept if you want to configure distributed build
# vars.mongodb.uri =  "mongodb://"${vars.cluster.db}
# vars.elasticsearch.host = ${vars.cluster.db}
# dataservice.host = ${vars.cluster.frontend}
# vars.metadataservice.host = ${vars.cluster.frontend}

# uncomment the following line if you want to enable SAML support
#codatlas.samlMetadata = ${LAMBDA_HOME}/samlMetadata

play.mailer {
  from="\"InsightIO\" <noreply@insight.io>"
  mock=yes
}